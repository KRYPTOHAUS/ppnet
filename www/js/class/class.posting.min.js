function Posting(e,o){return console.log("Posting"),scope=e,"undefined"!=typeof o&&(this.id=o),this}var scope,rootScope;Posting.prototype.load=function(e){console.log("Posting.prototype.load");for(var o=0;o<=scope.postings.length-1;o++)if(scope.postings[o].id==e.id){this.doc=scope.postings[o].doc,this.rev=scope.postings[o].doc._rev?scope.postings[o].doc._rev:scope.postings[o].doc.rev;break}return this},Posting.prototype.create=function(e){return value={created:(new Date).getTime(),msg:e,user:{id:scope.user.getId(),name:scope.user.getName()},coords:{longitude:scope.coords.longitude,latitude:scope.coords.latitude,accuracy:scope.coords.accuracy},type:"POST"}},Posting.prototype.createToScope=function(e){return console.log("Posting.prototype.createToScope"),this.doc=e.doc,this.created=e.created?e.created:e.doc.created,this.rev=e.doc._rev?e.doc._rev:e.doc.rev,e.doc.image&&!e.doc._attachments?(console.log("KEIN BILD DA"),!1):(e.doc.image&&e.doc._attachments&&"undefined"!=typeof scope.images&&(console.log("BILD DA"),e.doc.user.id==scope.user.getId()&&scope.images[e.id]&&(this.temp_img=scope.images[e.id])),scope.types[e.id]={type:"POST"},scope.likes[e.id]||(scope.likes[e.id]=new Array),scope.comments[e.id]||(scope.comments[e.id]=new Array),void scope.postings.push(this))},Posting.prototype.delete=function(){console.log("Posting.prototype.delete"),scope.db.get(this.id,function(e,o){scope.db.remove(o,function(e,o){pusher=new Array,pusher.push(o.id),scope.likes&&angular.forEach(scope.likes[o.id],function(e,o){new Like(scope,e.id).delete(0),pusher.push(e.id)}),scope.comments&&angular.forEach(scope.comments[o.id],function(e,o){new Comment(scope,e.id).delete(0),pusher.push(e.id)}),scope.global_functions.toPush(pusher)})})},Posting.prototype.deleteFromScope=function(){console.log("Posting.prototype.deleteFromScope");for(var e=0;e<=scope.postings.length-1;e++)if(scope.postings[e].id==this.id){scope.postings.splice(e,1);break}},Posting.prototype.onChange=function(e){console.log("Posting.prototype.onChange"),e.deleted?this.deleteFromScope():scope.types[e.id]||this.createToScope(e),scope.apply()};